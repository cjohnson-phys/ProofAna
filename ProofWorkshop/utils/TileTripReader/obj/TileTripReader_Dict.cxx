#ifdef __llvm__
#pragma GCC diagnostic ignored "-Wunused-private-field"
#endif
#include "TileTripReader/TTileTripReader.h"
#include <vector>
//
// File generated by /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.19-x86_64-slc5-gcc4.3/bin/rootcint at Mon Jan 12 16:12:24 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIobjdITileTripReader_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TileTripReader_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace Root {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Root::TTileTripReader TTileTripReader;
      #else
      class TTileTripReader  :  public ::Root::TSelectorToolBase,  public ::Root::TCalculatorToolBase {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Root::TTileTripReader::Verbosity Verbosity;
         #else
         enum Verbosity  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TTileTripReader() throw() {};
         ::TChain* m_trips; //
         ::TChain* m_runMap; //
         int m_mapRun; //
         int m_Run; //
         int m_FirstEntry; //
         int m_currentRun; //
         int m_currentLbn; //
         int m_startEntry; //
         int m_verbosity; //
         map< unsigned int, map< unsigned short, unsigned int, ::less< unsigned short >, allocator< pair< const unsigned short, unsigned int >  >  >  > m_badEvents; //
         vector< ::TripRegion > m_currentTrips; //
         vector< int > m_Offsets; //
         vector< char >* m_Partition; //
         vector< char >* m_Module; //
         int m_LumiStart; //
         vector< int >* m_LumiEnd; //
         ::basic_ostream< char, ::char_traits< char >  >* m_msglog; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void RootcLcLTTileTripReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RootcLcLTTileTripReader_Dictionary();
   static void delete_RootcLcLTTileTripReader(void *p);
   static void deleteArray_RootcLcLTTileTripReader(void *p);
   static void destruct_RootcLcLTTileTripReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Root::TTileTripReader*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Root::TTileTripReader) == sizeof(::ROOT::Shadow::Root::TTileTripReader));
      ::Root::TTileTripReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Root::TTileTripReader),0);
      static ::ROOT::TGenericClassInfo 
         instance("Root::TTileTripReader", "../TileTripReader/TTileTripReader.h", 43,
                  typeid(::Root::TTileTripReader), DefineBehavior(ptr, ptr),
                  &RootcLcLTTileTripReader_ShowMembers, &RootcLcLTTileTripReader_Dictionary, isa_proxy, 4,
                  sizeof(::Root::TTileTripReader) );
      instance.SetDelete(&delete_RootcLcLTTileTripReader);
      instance.SetDeleteArray(&deleteArray_RootcLcLTTileTripReader);
      instance.SetDestructor(&destruct_RootcLcLTTileTripReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Root::TTileTripReader*)
   {
      return GenerateInitInstanceLocal((::Root::TTileTripReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Root::TTileTripReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RootcLcLTTileTripReader_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Root::TTileTripReader*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void RootcLcLTTileTripReader_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Root::TTileTripReader.
      typedef ::ROOT::Shadow::Root::TTileTripReader ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Root::TTileTripReader*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_trips", &sobj->m_trips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_runMap", &sobj->m_runMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_mapRun", &sobj->m_mapRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Run", &sobj->m_Run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_FirstEntry", &sobj->m_FirstEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_currentRun", &sobj->m_currentRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_currentLbn", &sobj->m_currentLbn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_startEntry", &sobj->m_startEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_verbosity", &sobj->m_verbosity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_badEvents", (void*)&sobj->m_badEvents);
      R__insp.InspectMember("map<unsigned int,std::map<unsigned short,unsigned int> >", (void*)&sobj->m_badEvents, "m_badEvents.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_currentTrips", (void*)&sobj->m_currentTrips);
      R__insp.InspectMember("vector<TripRegion>", (void*)&sobj->m_currentTrips, "m_currentTrips.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Offsets", (void*)&sobj->m_Offsets);
      R__insp.InspectMember("vector<int>", (void*)&sobj->m_Offsets, "m_Offsets.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Partition", &sobj->m_Partition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Module", &sobj->m_Module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_LumiStart", &sobj->m_LumiStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_LumiEnd", &sobj->m_LumiEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_msglog", &sobj->m_msglog);
      sobj->Root::TSelectorToolBase::ShowMembers(R__insp);
      sobj->Root::TCalculatorToolBase::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_RootcLcLTTileTripReader(void *p) {
      delete ((::Root::TTileTripReader*)p);
   }
   static void deleteArray_RootcLcLTTileTripReader(void *p) {
      delete [] ((::Root::TTileTripReader*)p);
   }
   static void destruct_RootcLcLTTileTripReader(void *p) {
      typedef ::Root::TTileTripReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Root::TTileTripReader

namespace ROOT {
   void maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR_Dictionary();
   static void *new_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p);
   static void destruct_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,map<unsigned short,unsigned int> >*)
   {
      map<unsigned int,map<unsigned short,unsigned int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,map<unsigned short,unsigned int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,map<unsigned short,unsigned int> >", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.19-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<unsigned int,map<unsigned short,unsigned int> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,map<unsigned short,unsigned int> >) );
      instance.SetNew(&new_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,map<unsigned short,unsigned int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,map<unsigned short,unsigned int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,map<unsigned short,unsigned int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,map<unsigned short,unsigned int> > : new map<unsigned int,map<unsigned short,unsigned int> >;
   }
   static void *newArray_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,map<unsigned short,unsigned int> >[nElements] : new map<unsigned int,map<unsigned short,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p) {
      delete ((map<unsigned int,map<unsigned short,unsigned int> >*)p);
   }
   static void deleteArray_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p) {
      delete [] ((map<unsigned int,map<unsigned short,unsigned int> >*)p);
   }
   static void destruct_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintgRsPgR(void *p) {
      typedef map<unsigned int,map<unsigned short,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,map<unsigned short,unsigned int> >

namespace ROOT {
   void maplEunsignedsPshortcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOunsignedsPintgR_Dictionary();
   static void *new_maplEunsignedsPshortcOunsignedsPintgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOunsignedsPintgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOunsignedsPintgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOunsignedsPintgR(void *p);
   static void destruct_maplEunsignedsPshortcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,unsigned int>*)
   {
      map<unsigned short,unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,unsigned int>", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.19-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<unsigned short,unsigned int>), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,unsigned int>) );
      instance.SetNew(&new_maplEunsignedsPshortcOunsignedsPintgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOunsignedsPintgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOunsignedsPintgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,unsigned int> : new map<unsigned short,unsigned int>;
   }
   static void *newArray_maplEunsignedsPshortcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,unsigned int>[nElements] : new map<unsigned short,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOunsignedsPintgR(void *p) {
      delete ((map<unsigned short,unsigned int>*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOunsignedsPintgR(void *p) {
      delete [] ((map<unsigned short,unsigned int>*)p);
   }
   static void destruct_maplEunsignedsPshortcOunsignedsPintgR(void *p) {
      typedef map<unsigned short,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,unsigned int>

namespace ROOT {
   void vectorlETripRegiongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETripRegiongR_Dictionary();
   static void *new_vectorlETripRegiongR(void *p = 0);
   static void *newArray_vectorlETripRegiongR(Long_t size, void *p);
   static void delete_vectorlETripRegiongR(void *p);
   static void deleteArray_vectorlETripRegiongR(void *p);
   static void destruct_vectorlETripRegiongR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TripRegion>*)
   {
      vector<TripRegion> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TripRegion>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TripRegion>", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.19-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TripRegion>), DefineBehavior(ptr, ptr),
                  0, &vectorlETripRegiongR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TripRegion>) );
      instance.SetNew(&new_vectorlETripRegiongR);
      instance.SetNewArray(&newArray_vectorlETripRegiongR);
      instance.SetDelete(&delete_vectorlETripRegiongR);
      instance.SetDeleteArray(&deleteArray_vectorlETripRegiongR);
      instance.SetDestructor(&destruct_vectorlETripRegiongR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TripRegion> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TripRegion>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETripRegiongR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TripRegion>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETripRegiongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TripRegion> : new vector<TripRegion>;
   }
   static void *newArray_vectorlETripRegiongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TripRegion>[nElements] : new vector<TripRegion>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETripRegiongR(void *p) {
      delete ((vector<TripRegion>*)p);
   }
   static void deleteArray_vectorlETripRegiongR(void *p) {
      delete [] ((vector<TripRegion>*)p);
   }
   static void destruct_vectorlETripRegiongR(void *p) {
      typedef vector<TripRegion> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TripRegion>

namespace ROOT {
   void vectorlEchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEchargR_Dictionary();
   static void *new_vectorlEchargR(void *p = 0);
   static void *newArray_vectorlEchargR(Long_t size, void *p);
   static void delete_vectorlEchargR(void *p);
   static void deleteArray_vectorlEchargR(void *p);
   static void destruct_vectorlEchargR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<char>*)
   {
      vector<char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<char>", -2, "vector.dll", 0,
                  typeid(vector<char>), DefineBehavior(ptr, ptr),
                  0, &vectorlEchargR_Dictionary, isa_proxy, 4,
                  sizeof(vector<char>) );
      instance.SetNew(&new_vectorlEchargR);
      instance.SetNewArray(&newArray_vectorlEchargR);
      instance.SetDelete(&delete_vectorlEchargR);
      instance.SetDeleteArray(&deleteArray_vectorlEchargR);
      instance.SetDestructor(&destruct_vectorlEchargR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<char> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEchargR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<char>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char> : new vector<char>;
   }
   static void *newArray_vectorlEchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char>[nElements] : new vector<char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEchargR(void *p) {
      delete ((vector<char>*)p);
   }
   static void deleteArray_vectorlEchargR(void *p) {
      delete [] ((vector<char>*)p);
   }
   static void destruct_vectorlEchargR(void *p) {
      typedef vector<char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<char>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.19-x86_64-slc5-gcc4.3/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* ../obj/TileTripReader_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTileTripReader_Dict();

extern "C" void G__set_cpp_environmentTileTripReader_Dict() {
  G__cpp_reset_tagtableTileTripReader_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevTileTripReader_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Root::TTileTripReader */
static int G__TileTripReader_Dict_436_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         const Root::TAccept& obj = ((Root::TTileTripReader*) G__getstructoffset())->accept((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 4:
      {
         const Root::TAccept& obj = ((Root::TTileTripReader*) G__getstructoffset())->accept((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const Root::TAccept& obj = ((Root::TTileTripReader*) G__getstructoffset())->accept((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const Root::TAccept& obj = ((Root::TTileTripReader*) G__getstructoffset())->accept((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Root::TTileTripReader*) G__getstructoffset())->areaTripFraction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Root::TResult& obj = ((Root::TTileTripReader*) G__getstructoffset())->calculate((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Root::TTileTripReader*) G__getstructoffset())->checkEtaPhi((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Root::TTileTripReader*) G__getstructoffset())->checkEvent((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TripRegion>* pobj;
         vector<TripRegion> xobj = ((Root::TTileTripReader*) G__getstructoffset())->getEtaPhi((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         pobj = new vector<TripRegion>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TripRegion* pobj;
         TripRegion xobj = ((Root::TTileTripReader*) G__getstructoffset())->partModToEtaPhi((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         pobj = new TripRegion(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Root::TTileTripReader*) G__getstructoffset())->setTripFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TileTripReader_Dict_436_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((Root::TTileTripReader*) G__getstructoffset())->setVerbosity((int) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((Root::TTileTripReader*) G__getstructoffset())->setVerbosity((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Root::TTileTripReader*) G__getstructoffset())->setVerbosity();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Root::TTileTripReader G__TRootcLcLTTileTripReader;
static int G__TileTripReader_Dict_436_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Root::TTileTripReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Root::TTileTripReader*) (soff+(sizeof(Root::TTileTripReader)*i)))->~G__TRootcLcLTTileTripReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Root::TTileTripReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Root::TTileTripReader*) (soff))->~G__TRootcLcLTTileTripReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Root::TTileTripReader */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTileTripReader_Dict {
 public:
  G__Sizep2memfuncTileTripReader_Dict(): p(&G__Sizep2memfuncTileTripReader_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTileTripReader_Dict::*p)();
};

size_t G__get_sizep2memfuncTileTripReader_Dict()
{
  G__Sizep2memfuncTileTripReader_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTileTripReader_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTTileTripReader))) {
     Root::TTileTripReader *G__Lderived;
     G__Lderived=(Root::TTileTripReader*)0x1000;
     {
       Root::TSelectorToolBase *G__Lpbase=(Root::TSelectorToolBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTTileTripReader),G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTSelectorToolBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Root::TCalculatorToolBase *G__Lpbase=(Root::TCalculatorToolBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTTileTripReader),G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTCalculatorToolBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTileTripReader_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("value_type",99,-1,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",67,-1,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",67,-1,256,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",99,-1,1,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",99,-1,257,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TileTripReader_DictLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TileTripReader_DictLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TileTripReader_DictLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TileTripReader_DictLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TripRegion>",117,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlETripRegioncOallocatorlETripRegiongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Root::TTileTripReader */
static void G__setup_memvarRootcLcLTTileTripReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTTileTripReader));
   { Root::TTileTripReader *p; p=(Root::TTileTripReader*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTTileTripReadercLcLVerbosity),-1,-2,1,G__FastAllocString(4096).Format("Default=%lldLL",(long long)Root::TTileTripReader::Default).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTTileTripReadercLcLVerbosity),-1,-2,1,G__FastAllocString(4096).Format("Debug=%lldLL",(long long)Root::TTileTripReader::Debug).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_TChain),-1,-1,4,"m_trips=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_TChain),-1,-1,4,"m_runMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_mapRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_Run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_FirstEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_currentRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_currentLbn=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_startEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_verbosity=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<unsigned int,std::map<unsigned short,unsigned int> >"),-1,4,"m_badEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlETripRegioncOallocatorlETripRegiongRsPgR),G__defined_typename("vector<TripRegion>"),-1,4,"m_currentTrips=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"m_Offsets=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR),G__defined_typename("vector<char>"),-1,4,"m_Partition=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR),G__defined_typename("vector<char>"),-1,4,"m_Module=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_LumiStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"m_LumiEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TileTripReader_DictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ostream"),-1,4,"m_msglog=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTileTripReader_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRootcLcLTTileTripReader(void) {
   /* Root::TTileTripReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTTileTripReader));
   G__memfunc_setup("accept",624,G__TileTripReader_Dict_436_0_2, 117, G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTAccept), -1, 1, 5, 1, 1, 1, 
"i - - 0 - run i - - 0 - lbn "
"h - - 0 '0' event d - - 0 '-99.9' eta "
"d - - 0 '-99.9' phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("areaTripFraction",1646,G__TileTripReader_Dict_436_0_3, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - run i - - 0 - lbn "
"d - - 0 - eta d - - 0 - phi "
"d - - 0 - dR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculate",942,G__TileTripReader_Dict_436_0_4, 117, G__get_linked_tagnum(&G__TileTripReader_DictLN_RootcLcLTResult), -1, 1, 5, 1, 1, 1, 
"i - - 0 - run i - - 0 - lbn "
"d - - 0 - eta d - - 0 - phi "
"d - - 0 - dR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkEtaPhi",1081,G__TileTripReader_Dict_436_0_5, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - run i - - 0 - lbn "
"d - - 0 - eta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkEvent",1024,G__TileTripReader_Dict_436_0_6, 103, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - run h - - 0 - lbn "
"h - - 0 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getEtaPhi",891,G__TileTripReader_Dict_436_0_8, 117, G__get_linked_tagnum(&G__TileTripReader_DictLN_vectorlETripRegioncOallocatorlETripRegiongRsPgR), G__defined_typename("vector<TripRegion>"), 0, 2, 1, 1, 0, 
"i - - 0 - run i - - 0 - lbn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("partModToEtaPhi",1493,G__TileTripReader_Dict_436_0_10, 117, G__get_linked_tagnum(&G__TileTripReader_DictLN_TripRegion), -1, 0, 2, 1, 1, 0, 
"i - - 0 - part i - - 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTripFile",1131,G__TileTripReader_Dict_436_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVerbosity",1299,G__TileTripReader_Dict_436_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 'Debug' v u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildOffsets",1258,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findStartEntry",1473,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBadEventList",1521,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTileTripReader", 1618, G__TileTripReader_Dict_436_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTileTripReader_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTileTripReader_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTileTripReader_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator = { "vector<char,allocator<char> >::iterator" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR = { "reverse_iterator<vector<char,allocator<char> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_Root = { "Root" , 110 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_RootcLcLTAccept = { "Root::TAccept" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_RootcLcLTSelectorToolBase = { "Root::TSelectorToolBase" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_RootcLcLTResult = { "Root::TResult" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_RootcLcLTCalculatorToolBase = { "Root::TCalculatorToolBase" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_TripRegion = { "TripRegion" , 115 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_RootcLcLTTileTripReader = { "Root::TTileTripReader" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_RootcLcLTTileTripReadercLcLVerbosity = { "Root::TTileTripReader::Verbosity" , 101 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_vectorlETripRegioncOallocatorlETripRegiongRsPgR = { "vector<TripRegion,allocator<TripRegion> >" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR = { "map<unsigned int,map<unsigned short,unsigned int,less<unsigned short>,allocator<pair<const unsigned short,unsigned int> > >,less<unsigned int>,allocator<pair<const unsigned int,map<unsigned short,unsigned int,less<unsigned short>,allocator<pair<const unsigned short,unsigned int> > > > > >" , 99 , -1 };
G__linked_taginfo G__TileTripReader_DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTileTripReader_Dict() {
  G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator.tagnum = -1 ;
  G__TileTripReader_DictLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TileTripReader_DictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__TileTripReader_DictLN_Root.tagnum = -1 ;
  G__TileTripReader_DictLN_RootcLcLTAccept.tagnum = -1 ;
  G__TileTripReader_DictLN_RootcLcLTSelectorToolBase.tagnum = -1 ;
  G__TileTripReader_DictLN_RootcLcLTResult.tagnum = -1 ;
  G__TileTripReader_DictLN_RootcLcLTCalculatorToolBase.tagnum = -1 ;
  G__TileTripReader_DictLN_TChain.tagnum = -1 ;
  G__TileTripReader_DictLN_TripRegion.tagnum = -1 ;
  G__TileTripReader_DictLN_RootcLcLTTileTripReader.tagnum = -1 ;
  G__TileTripReader_DictLN_RootcLcLTTileTripReadercLcLVerbosity.tagnum = -1 ;
  G__TileTripReader_DictLN_vectorlETripRegioncOallocatorlETripRegiongRsPgR.tagnum = -1 ;
  G__TileTripReader_DictLN_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TileTripReader_DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTileTripReader_Dict() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_vectorlEcharcOallocatorlEchargRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_reverse_iteratorlEvectorlEcharcOallocatorlEchargRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_Root);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_RootcLcLTAccept);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_RootcLcLTSelectorToolBase);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_RootcLcLTResult);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_RootcLcLTCalculatorToolBase);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_TChain);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_TripRegion);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_RootcLcLTTileTripReader),sizeof(Root::TTileTripReader),-1,263426,(char*)NULL,G__setup_memvarRootcLcLTTileTripReader,G__setup_memfuncRootcLcLTTileTripReader);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_RootcLcLTTileTripReadercLcLVerbosity);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_vectorlETripRegioncOallocatorlETripRegiongRsPgR);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_maplEunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPshortcOunsignedsPintcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOunsignedsPintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TileTripReader_DictLN_vectorlEintcOallocatorlEintgRsPgR);
}
extern "C" void G__cpp_setupTileTripReader_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTileTripReader_Dict()");
  G__set_cpp_environmentTileTripReader_Dict();
  G__cpp_setup_tagtableTileTripReader_Dict();

  G__cpp_setup_inheritanceTileTripReader_Dict();

  G__cpp_setup_typetableTileTripReader_Dict();

  G__cpp_setup_memvarTileTripReader_Dict();

  G__cpp_setup_memfuncTileTripReader_Dict();
  G__cpp_setup_globalTileTripReader_Dict();
  G__cpp_setup_funcTileTripReader_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTileTripReader_Dict();
  return;
}
class G__cpp_setup_initTileTripReader_Dict {
  public:
    G__cpp_setup_initTileTripReader_Dict() { G__add_setup_func("TileTripReader_Dict",(G__incsetup)(&G__cpp_setupTileTripReader_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTileTripReader_Dict() { G__remove_setup_func("TileTripReader_Dict"); }
};
G__cpp_setup_initTileTripReader_Dict G__cpp_setup_initializerTileTripReader_Dict;

